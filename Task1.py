# Guido van Rossum <guido@python.org>


def step1():
    print(
        '–£—Ç–∫–∞–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –ø–æ–≥—É–ª—è—Ç—å. \n'
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}\n'.format(*options))

    if options[option]:
        return step2_umbrella()
    return step2_no_umbrella()


def step2_umbrella():
    print(
        '–û—Ç–ª–∏—á–Ω–æ, –≤–µ–¥—å —É —É—Ç–∫–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è –∑–æ–Ω—Ç–∏–∫–æ–≤. \n'
        '–ù–æ –∫–∞–∫–æ–π –≤—ã–±—Ä–∞—Ç—å? '
    )
    option = ''
    options = {'–∫—Ä–∞—Å–Ω—ã–π': step3_red, '—Å–∏–Ω–∏–π': step3_blue, '–∑–µ–ª–µ–Ω—ã–π': step3_green}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}/{}\n'.format(*options))

    return options.get(option)()


def step2_no_umbrella():
    print(
        '–ü–æ—à–µ–ª –¥–æ–∂–¥–∏–∫ –∏ —É—Ç–∫–∞ –Ω–∞–º–æ–∫–ª–∞. \n'
        '–°–ø—Ä—è—Ç–∞—Ç—å—Å—è –ø–æ–¥ –≥—Ä–∏–± –∏–ª–∏ –ø–æ–ø–ª–∞–≤–∞—Ç—å –≤ –æ–∑–µ—Ä–µ?'
    )
    option = ''
    options = {'–≥—Ä–∏–±': True, '–æ–∑–µ—Ä–æ': False}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}\n'.format(*options))

    if options[option]:
        return step3_mushroom()
    return step3_lake()


def step3_mushroom():
    print(
        '–ü–æ–¥ –≥—Ä–∏–±–æ–º —Ç–∞–∫–∂–µ —Å–ø—Ä—è—Ç–∞–ª–∞—Å—å –¥—Ä—É–≥–∞—è —É—Ç–æ—á–∫–∞. \n'
        '–ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–µ–π?'
    )
    option = ''
    options = {'–∫—Ä–∏–∫–Ω—É—Ç—å': True, '–º–æ–ª—á–∞—Ç—å': False}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}\n'.format(*options))

    return step4_end()


def step3_lake():
    print(
        '–í –æ–∑–µ—Ä–µ –ø–ª–∞–≤–∞–µ—Ç –∏ –¥—Ä—É–≥–∞—è —É—Ç–æ—á–∫–∞. \n'
        '–ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–µ–π?'
    )
    option = ''
    options = {'–ø–æ–¥–ø–ª—ã—Ç—å': True, '—É–ø–ª—ã—Ç—å': False}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}\n'.format(*options))

    return step4_end()


def step3_red():
    print(
        '–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –∫—Ä–∞—Å–Ω—ã–π –∑–æ–Ω—Ç —Å–ª–æ–º–∞–ª—Å—è. \n'
        '–ù–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π.'
    )
    option = ''
    options = {'—Å–∏–Ω–∏–π': step3_blue, '–∑–µ–ª–µ–Ω—ã–π': step3_green}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}\n'.format(*options))

    return options.get(option)()


def step3_blue():
    print(
        '–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Å–∏–Ω–∏–π –∑–æ–Ω—Ç —Å–ª–æ–º–∞–ª—Å—è. \n'
        '–ù–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π.'
    )
    option = ''
    options = {'–∫—Ä–∞—Å–Ω—ã–π': step3_red, '–∑–µ–ª–µ–Ω—ã–π': step3_green}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}\n'.format(*options))

    return options.get(option)()


def step3_green():
    print(
        '–ù–æ —Ç–æ–ª—å–∫–æ –∑–µ–ª–µ–Ω—ã–π –∑–æ–Ω—Ç –Ω–µ –∫—Ä–∞—Å–∏–≤–æ. \n'
        '–ö–∞–∫–æ–π –∞–∫—Å–µ—Å—Å—É–∞—Ä –ø–æ–¥–æ–±—Ä–∞—Ç—å –∫ –Ω–µ–º—É?'
    )
    option = ''
    options = {'—Å—É–º–æ—á–∫–∞': None, '–æ—á–µ—á–∏': None, '–≥–∞–ª—Å—Ç—É–∫': None}
    while option not in options:
        option = input('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}/{}\n'.format(*options))

    return step4_end()


def step4_end():
    print('–û—Ç–ª–∏—á–Ω–æ. –ù–æ –Ω–∞ –∑–µ–º–ª—é —É–ø–∞–ª –º–µ—Ç–µ–æ—Ä–∏—Ç –∏ –≤—Å–µ —É–º–µ—Ä–ª–∏ ‚ò†Ô∏è')


if __name__ == '__main__':
    step1()
